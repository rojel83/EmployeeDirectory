{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody.js","components/DataTable.js","components/SearchName.js","components/SearchDOB.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","SearchDOB","Nav","data-toggle","data-target","aria-controls","aria-expanded","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","uHeadings","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f82948ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({});\r\n\r\nexport default DataAreaContext;\r\n","import React, { useContext } from \"react\";\r\nimport \"../styles/DataBody.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext\";\r\n\r\nconst DataBody = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {context.developerState.filteredUsers[0] !== undefined &&\r\n      context.developerState.filteredUsers[0].name !== undefined ? (\r\n        context.developerState.filteredUsers.map(\r\n          ({ login, name, picture, phone, email, dob }) => {\r\n            return (\r\n              <tr key={login.uuid}>\r\n                <td data-th=\"Image\" className=\"align-middle\">\r\n                  <img\r\n                    src={picture.medium}\r\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                    className=\"img-responsive\"\r\n                  />\r\n                </td>\r\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                  {name.first} {name.last}\r\n                </td>\r\n                <td data-th=\"Phone\" className=\"align-middle\">\r\n                  {phone}\r\n                </td>\r\n                <td data-th=\"Email\" className=\"align-middle\">\r\n                  <a href={\"mailto:\" + email} target=\"__blank\">\r\n                    {email}\r\n                  </a>\r\n                </td>\r\n                <td data-th=\"DOB\" className=\"align-middle\">\r\n                  {formatDate(dob.date)}\r\n                </td>\r\n              </tr>\r\n            );\r\n          }\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default DataBody;\r\n","import React, { useContext } from \"react\";\r\nimport DataBody from \"./DataBody\";\r\nimport \"../styles/DataTable.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext.js\";\r\n\r\nconst DataTable = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {context.developerState.headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    // context.handleSort(name.toLowerCase());\r\n                    context.handleSort(name);\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useContext } from \"react\";\r\nimport \"../styles/SearchName.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext.js\";\r\n\r\nconst SearchName = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <div className=\"input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\" id=\"\">\r\n            Search\r\n          </span>\r\n        </div>\r\n        <input\r\n          className=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"name\"\r\n          aria-label=\"Search\"\r\n          onChange={(e) => context.handleSearchChange(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchName;\r\n","import React, { useContext } from \"react\";\nimport \"../styles/SearchBox.css\";\nimport DataAreaContext from \"../utils/DataAreaContext.js\";\n\nconst SearchDOB = () => {\n  const context = useContext(DataAreaContext);\n\n  return (\n    <div className=\"searchbox\">\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" id=\"\">\n            DOB\n          </span>\n        </div>\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          onChange={(e) => context.handleSearchChange(e)}\n        />\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          onChange={(e) => context.handleSearchChange(e)}\n        />\n      </div>\n    </div>\n  );\n};\nexport default SearchDOB;\n","import React from \"react\";\r\nimport SearchName from \"./SearchName.js\";\r\nimport SearchDOB from \"./SearchDOB\";\r\nimport \"../styles/Nav.css\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\r\n        {\r\n          <div className=\"input-group col-8\">\r\n            <SearchDOB />\r\n          </div>\r\n        }\r\n        <div className=\"search-area col-4\">\r\n          <SearchName />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all users\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/DataArea.css\";\r\nimport DataAreaContext from \"../utils/DataAreaContext.js\";\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n    users: [],\r\n    order: \"descend\",\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: \"Image\", width: \"10%\", order: \"descend\" },\r\n      { name: \"name\", width: \"10%\", order: \"descend\" },\r\n      { name: \"phone\", width: \"20%\", order: \"descend\" },\r\n      { name: \"email\", width: \"20%\", order: \"descend\" },\r\n      { name: \"dob\", width: \"10%\", order: \"descend\" },\r\n    ],\r\n  });\r\n\r\n  const handleSort = (heading) => {\r\n    let currentOrder = developerState.headings\r\n      .filter((elem) => elem.name === heading)\r\n      .map((elem) => elem.order)\r\n      .toString();\r\n\r\n    if (currentOrder === \"descend\") {\r\n      currentOrder = \"ascend\";\r\n    } else {\r\n      currentOrder = \"descend\";\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (currentOrder === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else if (heading === \"dob\") {\r\n          return a[heading].age - b[heading].age;\r\n        } else {\r\n          return a[heading].localeCompare(b[heading]);\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        } else if (heading === \"dob\") {\r\n          return b[heading].age - a[heading].age;\r\n        } else {\r\n          return b[heading].localeCompare(a[heading]);\r\n        }\r\n      }\r\n    };\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n    const uHeadings = developerState.headings.map((elem) => {\r\n      elem.order = elem.name === heading ? currentOrder : elem.order;\r\n      return elem;\r\n    });\r\n\r\n    setDeveloperState({\r\n      ...developerState,\r\n      filteredUsers: sortedUsers,\r\n      headings: uHeadings,\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter((item) => {\r\n      let values =\r\n        item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n      console.log(filter, values);\r\n      if (values.indexOf(filter.toLowerCase()) !== -1) {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n  };\r\n\r\n  ///https://stackoverflow.com/questions/53120972/how-to-call-loading-function-with-react-useeffect-only-once\r\n  useEffect(() => {\r\n    API.getUsers().then((results) => {\r\n      console.log(results.data.results);\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DataAreaContext.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <Nav />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\r\n      </div>\r\n    </DataAreaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataArea;\r\n","import React from \"react\";\r\nimport DataArea from \"./DataArea\";\r\nimport \"../styles/Main.css\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <>\r\n      <DataArea />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"../styles/Wrapper.css\";\r\n\r\nfunction Wrapper({ children }) {\r\n  return <div className=\"wrapper\">{children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Employee Directory</h1>\r\n      <p>\r\n        Click on carrots to filter by heading or use the search box to narrow\r\n        your results.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}